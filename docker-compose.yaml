version: '3.8'

x-local-logging: &local-logging
  driver: local

networks:
  highlight_network:
    driver: bridge

services:
  zookeeper:
    logging: *local-logging
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: hl_zookeeper
    restart: on-failure
    volumes:
      - hl_zoo-data:/var/lib/zookeeper/data
      - hl_zoo-log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - highlight_network

  kafka:
    logging: *local-logging
    image: confluentinc/cp-kafka:7.7.0
    container_name: hl_kafka
    volumes:
      - hl_kafka-data:/var/lib/kafka/data
    expose:
      - 9092
    restart: on-failure
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://hl_kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES: 268435456
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_SEGMENT_BYTES: 268435456
      KAFKA_MESSAGE_MAX_BYTES: 268435456
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PRODUCER_MAX_REQUEST_SIZE: 268435456
      KAFKA_REPLICA_FETCH_MAX_BYTES: 268435456
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: 'hl_zookeeper:2181'
    networks:
      - highlight_network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server hl_kafka:9092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    logging: *local-logging
    container_name: hl_redis
    image: redis:7.4.0
    restart: on-failure
    volumes:
      - hl_redis-data:/data
    expose:
      - 6379
    command:
      - redis-server
      - --save 60 1
      - --loglevel warning
    networks:
      - highlight_network

  postgres:
    logging: *local-logging
    image: ankane/pgvector:v0.5.1
    restart: on-failure
    expose:
      - 5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - hl_postgres-data:/var/lib/postgresql/data
      - ./scripts/migrations/init.sql:/root/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - highlight_network

  clickhouse:
    logging: *local-logging
    container_name: hl_clickhouse
    image: clickhouse/clickhouse-server:24.3.15.72-alpine
    restart: on-failure
    expose:
      - 8123
      - 9000
    volumes:
      - ./docker/config.xml:/etc/clickhouse-server/config.d/highlight.xml
      - ./docker/users.xml:/etc/clickhouse-server/users.d/highlight.xml
      - hl_clickhouse-data:/var/lib/clickhouse
      - hl_clickhouse-logs:/var/log/clickhouse-server
    networks:
      - highlight_network

  collector:
    logging: *local-logging
    restart: on-failure
    build:
      dockerfile: ./docker/collector.Dockerfile
      context: .
      args:
        - IN_DOCKER_GO=true
        - SSL=false
    container_name: hl_collector
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - ./backend/localhostssl/server.crt:/server.crt
      - ./backend/localhostssl/server.key:/server.key
    expose:
      - 24224
      - 34302
      - 4317
      - 4318
      - 4319
      - 4433
      - 4434
      - 4435
      - 6513
      - 6514
      - 8318
      - 8888
    environment:
      OTLP_ENDPOINT: http://hl_collector:4318
      IN_DOCKER_GO: true
      SSL: false
    networks:
      - highlight_network

  predictions:
    logging: *local-logging
    restart: on-failure
    build:
      dockerfile: ./packages/predictions/predictions.Dockerfile
      context: .
    container_name: hl_predictions
    expose:
      - 5001
    networks:
      - highlight_network

  backend:
    container_name: hl_backend
    image: ghcr.io/highlight/highlight-backend:docker-v0.5.2
    restart: on-failure
    expose:
      - 8082
    volumes:
      - hl_highlight-data:/highlight-data
      - ./backend/localhostssl/server.key:/build/localhostssl/server.key
      - ./backend/localhostssl/server.crt:/build/localhostssl/server.crt
      - ./backend/env.enc:/build/env.enc
      - ./backend/env.enc.dgst:/build/env.enc.dgst
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_started
      zookeeper:
        condition: service_started
      collector:
        condition: service_started
      predictions:
        condition: service_started
    networks:
      - highlight_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.highlight-backend.rule=Host(`highlight.adventure-x.org`) && PathPrefix(`/backend`)"
      - "traefik.http.routers.highlight-backend.entrypoints=websecure"
      - "traefik.http.routers.highlight-backend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.highlight-backend.service=backend-service"
      - "traefik.http.services.backend-service.loadbalancer.server.port=8082"
      - "traefik.http.middlewares.strip-backend-prefix.stripPrefix.prefixes=/backend"
      - "traefik.http.routers.highlight-backend.middlewares=strip-backend-prefix"

  frontend:
    container_name: hl_frontend
    image: ghcr.io/highlight/highlight-frontend:docker-v0.5.2
    restart: on-failure
    volumes:
      - ./backend/localhostssl/server.key:/etc/ssl/private/ssl-cert.key
      - ./backend/localhostssl/server.pem:/etc/ssl/certs/ssl-cert.pem
    expose:
      - 3000
      - 6006
      - 8080
    env_file: .env
    depends_on:
      - backend

volumes:
  hl_postgres-data:
  hl_clickhouse-data:
  hl_clickhouse-logs:
  hl_redis-data:
  hl_kafka-data:
  hl_zoo-log:
  hl_zoo-data:
  hl_highlight-data:
